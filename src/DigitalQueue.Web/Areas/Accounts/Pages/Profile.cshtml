@page "{id}"

@model ProfileModel

@{
    ViewData["Title"] = $"{Model.Profile!.Email}'s Profile";
}

<div class="container p-3">
    @if (TempData["PostResultMessage"] is bool result)
    {
        @await Component.InvokeAsync("Alert", new
        {
            success=result, 
            message=(result ? "User updated successfully." : "Something went wrong.")
        })
    }
    <div class="row mt-5">
        <div class="col m-1">
            <p class="h4 mb-4"><i class="fa fa-fw fa-user m-1"></i>Basic Info</p>
            @if (!Model.IsEditable)
            {
                <div class="row">
                    <div class="col-6 mb-3">
                        <label for="name" class="form-label">Name</label>
                        <input type="text" class="form-control" id="name" value="@Model.Profile.FullName" 
                               readonly="readonly">
                    </div>
                </div>
                <div class="row">
                    <div class="col-6 mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" value="@Model.Profile.Email" 
                               readonly="readonly">
                    </div>
                </div>
            }
            else
            {
            <form method="post">
                <div class="row">
                    <div class="col-6 mb-3">
                        <label for="name" class="form-label">Name</label>
                        <input type="text" class="form-control" id="name" value="@Model.Profile.FullName">
                    </div>
                </div>
                <div class="row">
                    <div class="col-6 mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" value="@Model.Profile.Email">
                    </div>
                </div>
                <div class="row">
                    <div class="col-3">
                        <div class="form-group mt-2">
                            <div class="text-danger" asp-validation-summary="All"></div>
                        </div>
                        <div class="mt-3">
                            <button type="submit" class="btn btn-success">Save Changes</button>
                        </div>
                    </div>
                </div>
            </form>
            }
        </div>
        <div class="col m-1">
            <p class="h3 mb-4"><i class="fa fa-fw fa-tools m-1"></i>Actions</p>
            <div class="btn-group-vertical">
            @if (RouteData.Values["id"].Equals(User.FindFirstValue(ClaimTypes.NameIdentifier)))
            {
                <button type="button" class="btn btn-outline-dark btn-lg">Change Password</button>
            }
            else
            {
                <button type="button" class="btn btn-outline-danger btn-lg">
                    <i class="fa fa-user-slash m-2"></i>Freeze Account
                </button>
            }
            </div>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col">
            <p class="h3 mb-2"><i class="fa fa-fw fa-key m-1"></i>Account Roles</p>
            @await Component.InvokeAsync("RolesList", new {roles = Model.Profile.AccountRoles, userId = RouteData.Values["id"]})
        </div>
        <div class="col">
            <p class="h3 mb-5"><i class="fa fa-fw fa-book m-1"></i>Courses Roles</p>
            @await Component.InvokeAsync("PermissionsList", new {claims = Model.Profile.CoursesRoles})
        </div>
    </div>
</div>